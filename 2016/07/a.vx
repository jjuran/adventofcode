#!/usr/bin/env vx

const bindir = dirname realpath argv[ 0 ]

const input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

var data = (load input_path)

translate( &data, "[]", "  " )

const addresses = data.lines()

def is_abba
{
	return _[ 0 ] == _[ 3 ] and _[ 1 ] == _[ 2 ] and _[ 0 ] != _[ 1 ]
}

def has_abba
{
	const segment = _
	
	const len = segment.length
	
	for i in 0 .. len - 4 do
	{
		if is_abba segment[ i -> i + 4 ] then
		{
			return true
		}
	}
	
	return false
}

var count = 0

for addr in addresses do
{
	const segments = [addr / ' ']
	
	const n = half segments.length
	
	const even = 0 .. n map {_ * 2}
	const odd  = 0 -> n map {_ * 2 + 1}
	
	var good = false
	var bad  = false
	
	for s in segments[ odd ] do
	{
		if has_abba s then {bad = true; break}
	}
	
	if bad then {continue}
	
	for s2 in segments[ even ] do
	{
		if has_abba s2 then {good = true; break}
	}
	
	if good then {++count}
}

print count
