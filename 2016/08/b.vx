#!/usr/bin/env vx

const bindir = dirname realpath argv[ 0 ]

const input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

const data = (load input_path).lines()

var screen = [x"00" * 50 (*) 6]

def dump (screen)
{
	var dump = []
	
	for i in 0 -> 6 do
	{
		var scanline = screen[ i ].string
		
		translate( &scanline, "\x00\x01", " X" )
		
		dump <-- "   " scanline
	}
	
	return join( "\n", "\n", *dump, "" )
}

for operation in data do
{
	const words = [operation / ' ']
	
	if words.length == 2 then
	{
		const width, const height = *([words[ 1 ] / 'x'] map int)
		
		for i in 0 -> height do
		{
			screen[ i ] = (x"01" * width) screen[ i ][ width -> 50 ]
		}
		
		continue
	}
	
	const offset = int words[ 4 ]
	
	const axis, const index = words[ 2 ] / '='
	
	const i = int index
	
	if axis == "y" then
	{
		screen[ i ] = (screen[ i ] * 2)[ 50 - offset -> 100 - offset ]
		
		continue
	}
	
	const copy = packed (0 -> 6 map { screen[ _ ][ i ] })
	
	const rotated = (copy * 2)[ 6 - offset -> 12 - offset ]
	
	for j in 0 -> 6 do
	{
		screen[ j ][ i ] = rotated[ j ]
	}
}

print dump screen
