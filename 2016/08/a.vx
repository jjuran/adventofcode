#!/usr/bin/env lvx

let bindir = dirname realpath argv[ 0 ]

let input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

let data = (load input_path).lines()

var screen = [x"00" * 50 (*) 6]

for operation in data do
{
	let words = [operation / ' ']
	
	if words.length == 2 then
	{
		let (width, height) = *([words[ 1 ] / 'x'] map int)
		
		for i in 0 -> height do
		{
			screen[ i ] = (x"01" * width) screen[ i ][ width -> 50 ]
		}
		
		continue
	}
	
	let offset = int words[ 4 ]
	
	let (axis, index) = words[ 2 ] / '='
	
	let i = int index
	
	if axis == "y" then
	{
		screen[ i ] = (screen[ i ] * 2)[ 50 - offset -> 100 - offset ]
		
		continue
	}
	
	let copy = packed (0 -> 6 map { screen[ v ][ i ] })
	
	let rotated = (copy * 2)[ 6 - offset -> 12 - offset ]
	
	for j in 0 -> 6 do
	{
		screen[ j ][ i ] = rotated[ j ]
	}
}

let count = screen map { v map u8 per Math.sum } per Math.sum

put count
