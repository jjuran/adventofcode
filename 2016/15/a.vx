#!/usr/bin/env lvx

const bindir = dirname realpath argv[ 0 ]
const libdir = bindir "/../../lib/"

const import = { const path = libdir _ ".vsl"; eval( load path, path ) }

const modular = import "modular"

const input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

const data = (load input_path)

const digit = '0' .. '9'
const value = digit+ => int

const disc_record =
[
	"Disc #",
	value, " has ",
	value, " positions; at time=0, it is at position ",
	value, ".\n",
]

const schema = (disc_record => {[_]})+

var p = begin data

const initial_discs = [p += schema]

var T = 0
var M = 1  # super modulus

for disc in initial_discs do
{
	const (dt, m, k) = *disc
	
	const delay = -(k + T + dt) mod m
	
	T += modular.alignment (delay, m, M)
	M *= m
}

print T
