#!/usr/bin/env lvx

let bindir = dirname realpath argv[ 0 ]

let input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

let data = (load input_path).lines()[ 0 ]

def decompressed-length (data)
{
	var p = begin data
	
	var len = 0
	
	while p do
	{
		if *p++ == '(' then
		{
			var q = p.find ')'
			
			let marker = q - p
			
			let (m_len, m_rep) = *([marker / 'x'] map int)
			
			p = ++q + m_len
			
			let subseq = p - q
			
			len += m_rep * decompressed-length subseq
		}
		else
		{
			++len
		}
	}
	
	return len
}

put decompressed-length data
