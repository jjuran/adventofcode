#!/usr/bin/env lvx

let bindir = dirname realpath argv[ 0 ]

let input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

let data = (load input_path).lines()

let pairs = byte^
[
	'(': ')',
	'[': ']',
	'{': '}',
	'<': '>',
]

let score = byte^
[
	')': 3,
	']': 57,
	'}': 1197,
	'>': 25137,
]

def syntax_error_score (line)
{
	var stack = ""
	
	var p = begin line
	
	while p do
	{
		let c = *p++
		
		if c in pairs then
		{
			stack .= str pairs[ c ]
		}
		else if stack and c == stack[ stack.length - 1 ] then
		{
			stack = stack[ 0 -> stack.length - 1 ]
		}
		else
		{
			return score[ c ]
		}
	}
	
	return 0
}

let score_total = data map syntax_error_score per Math.sum
put score_total
