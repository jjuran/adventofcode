#!/usr/bin/env lvx

let bindir = dirname realpath argv[ 0 ]

let input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

let data = (load input_path)

let lines = data.lines()
let width = lines[ 0 ].length
let stride = width + 1

let blank = "~" * stride
let grid = str (blank, lines map { v "~" }, blank)

let digit = '0' .. '9'

def neighbors (index)
{
	return
	[
		index - 1, index - stride,
		index + 1, index + stride,
	]
}

def is_low (i)
{
	let height = grid[ i ]
	
	return height in digit and not (neighbors i ver { grid[ v ] <= height })
}

def risk (i)
{
	return 1 + int str grid[ i ]
}

let sum = stride -> grid.length - stride ver is_low map risk per Math.sum
put sum
