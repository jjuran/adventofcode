#!/usr/bin/env minivx

let bindir = dirname realpath argv[ 0 ]

let input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

let data = (load input_path).lines()

let letters = str ('a' .. 'z', 'A' .. 'Z')
let numbers = str (1 .. 52 map byte)

def priority (ascii)
{
	return u8 *(translated (str ascii, letters, numbers))
}

var groups = []

for i in 0 -> data.length div 3 do
{
	let j = i * 3
	
	groups <-- data[ j -> j + 3 ]
}

def search (group)
{
	for c in str ('a' .. 'z', 'A' .. 'Z') do
	{
		if not (group ver { not c in v }) then
		{
			return c
		}
	}
	
	# not reached
}

print (groups map search map priority per Math.sum)
