#!/usr/bin/env lvx

let bindir = dirname realpath argv[ 0 ]
let libdir = bindir "/../../lib/"

let import = { let path = libdir _ ".vsl"; eval( load path, path ) }

let digraph = import "digraph"

let input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

def parse (line)
{
	var p = (begin line).find ' '
	
	let src = int p.past
	
	p += " <-> "
	
	let dst = [eval p.rest]
	
	return src => dst
}

let data = (load input_path).lines() map parse

var graph = int^data

var n_groups = 0

while graph do
{
	++n_groups
	
	let first = graph.keys[ 0 ]
	
	let closure = digraph.closure( graph, first )
	
	for c in closure do
	{
		graph[ c ] = []
	}
	
	graph = int^(graph ver .value)
}

put n_groups
