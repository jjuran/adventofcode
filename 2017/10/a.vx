#!/usr/bin/env lvx

let bindir = dirname realpath argv[ 0 ]

let input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

let data = (load input_path).lines()[ 0 ]

let lens = [data / ','] map int

let N = 256

var list = packed (0 -> N map byte)

var pos = 0
var skip = 0


def rewind
{
	let mid = -pos mod N
	
	return list[ mid -> N ] list[ 0 -> mid ]
}

for len in lens do
{
	# reverse
	list = -list[ 0 -> len ] list[ len -> N ]
	
	# advance
	let delta = (len + skip) % N
	
	list = list[ delta -> N ] list[ 0 -> delta ]
	
	pos = (pos + delta) % N
	
	# augment
	++skip
}

put rep (rewind()[ 0 .. 1 ] map int per Math.product)
