#!/usr/bin/env lvx

let bindir = dirname realpath argv[ 0 ]
let libdir = bindir "/../../lib/"

def import (lib) { eval (load, realpath) libdir lib ".vy" }

let display = (import "status") { OUT <== _ }

let input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

let offset = "Generator X starts with ".length

let data = (load input_path).lines() map { int substr (v, offset) }

let (A, B) = *data
var (a, b) = A, B

var matches = 0

for n in 1 .. 40000000 do
{
	a = a * 16807 % 2147483647
	b = b * 48271 % 2147483647
	
	if u16 a == u16 b then
	{
		++matches
		
		display "" n ": " matches
	}
}

display ""

put matches
