#!/usr/bin/env lvx

let bindir = dirname realpath argv[ 0 ]
let libdir = bindir "/../../lib/"

def import (lib) { eval (load, realpath) libdir lib ".vy" }

let knot-hash = import "knot-hash"

let data = "uugsqrei"

def bitstrings { _ map { v "\0", v "x" } }

let binary-strings = bitstrings^8 [ "" ]
let one_bit_counts = binary-strings map { byte Iter.popcount v } per packed

def ones_count (s)
{
	return s map { u8 one_bit_counts[ u8 v ] } per Math.sum
}

let grid = 0 -> 128 map { knot-hash data "-" v } per packed

put ones_count grid
