#!/usr/bin/env lvx

let bindir = dirname realpath argv[ 0 ]

let input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

var grid = load input_path

let lines = grid.lines()

var width  = lines[ 0 ].length
var height = lines.length
var stride = width + 1

var x = width  div 2
var y = height div 2

let moves =
[
	[  0, -1 ],  # up
	[ -1,  0 ],  # left
	[  0,  1 ],  # down
	[  1,  0 ],  # right
]

var dir = 0

var n_infections_caused = 0

def work
{
	let i = x + y * stride
	
	let yaw = ???
	let now = ???
	
	if grid[ i ] == '#' then
	{
		yaw = -1
		now = '.'
	}
	else
	{
		yaw = 1
		now = '#'
		
		++n_infections_caused
	}
	
	grid[ i ] = now
	
	dir = (dir + yaw) mod 4
	
	let move = moves[ dir ]
	
	x += move[ 0 ]
	y += move[ 1 ]
	
	if y < 0 then
	{
		grid = ("." * width) "\n" grid
		
		++y
		++height
	}
	else if y >= height then
	{
		grid .= ("." * width) "\n"
		
		++height
	}
	else if x < 0 then
	{
		grid = grid.lines() map { "." v "\n" } per str
		
		++x
		++width
		++stride
	}
	else if x >= width then
	{
		grid = grid.lines() map { v ".\n" } per str
		
		++width
		++stride
	}
}

let N = 10000

for burst in 0 -> N do
{
	work()
}

put n_infections_caused
