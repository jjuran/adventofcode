#!/usr/bin/env lvx

let bindir = dirname realpath argv[ 0 ]

let input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

var data = translated( load input_path, "\t", "\n" ).lines() map int

let n = data.length

def select
{
	var max = 0
	var index = 0
	
	for i in 0 -> n do
	{
		if (let x = data[ i ]) > max then
		{
			max = x
			index = i
		}
	}
	
	return index
}

var seen = str^[]

var total = 0

while true do
{
	let key = rep data
	
	if key in seen then {break}
	
	seen[ key ] = true
	
	++total
	
	var i = select()
	
	var x = 0
	
	x <-> data[ i ]
	
	while x-- do
	{
		i = (i + 1) % n
		
		++data[ i ]
	}
}

put total
