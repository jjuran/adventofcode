#!/usr/bin/env lvx

let bindir = dirname realpath argv[ 0 ]

let input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

let data = (load input_path).lines()[ 0 ]

let tree = [data / ' '] map int

def tree_value (p)
{
	let n_children = *p++
	let n_metadata = *p++
	
	var children = []
	var metadata = []
	
	for i in 0 -> n_children do
	{
		p, let value = tree_value p
		
		children <-- value
	}
	
	for j in 0 -> n_metadata do
	{
		metadata <-- *p++
	}
	
	var value
	
	if n_children then
	{
		value = metadata ver { v and v <= n_children }
		                 map { children[ v - 1 ] }
		                 per Math.sum
		                 or 0
	}
	else
	{
		value = metadata per Math.sum
	}
	
	return p, value
}

put tail tree_value begin tree
