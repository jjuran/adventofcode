#!/usr/bin/env lvx

let bindir = dirname realpath argv[ 0 ]

let input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

let data = (load input_path).lines()[ 0 ]

def reactive (a, b)
{
	return packed a ~ x"20" == packed b
}

def find_next_reaction (p)
{
	var c = *p++
	
	while p do
	{
		if reactive( c, *p ) then
		{
			return --p
		}
		
		c = *p++
	}
	
	return ()
}

def reaction (s)
{
	var p = begin s
	var r = ""
	
	while p and (var next = find_next_reaction p) do
	{
		var q = next + 2
		
		while q and next > p and (reactive( *--next, *q ) or (++next and 0)) do
		{
			++q
		}
		
		r = r (next - p)
		
		p = q
	}
	
	r = r p.rest
	
	return r
}

def complete_reaction (s)
{
	var r = reaction s
	
	while r != s do
	{
		s = r
		r = reaction s
	}
	
	return r
}

let r = complete_reaction data

put r.length
