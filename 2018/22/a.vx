#!/usr/bin/env lvx

let bindir = dirname realpath argv[ 0 ]

let input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

let data = (load input_path).lines()

let depth = int (begin data[ 0 ] + "depth: ").rest

let (X, Y) = eval (begin data[ 1 ] + "target: ").rest

let width  = X + 1
let height = Y + 1

var el_memo = vector[ u16 ] (width * height)

def memoized_erosion_level (x, y)
{
	let i = x + y * width
	
	let geologic_index
	
	if x == 0 then
	{
		geologic_index = y * 48271
	}
	else if y == 0 then
	{
		geologic_index = x * 16807
	}
	else
	{
		geologic_index = el_memo[ i - 1 ] * el_memo[ i - width ]
	}
	
	return el_memo[ i ] = (geologic_index + depth) mod 20183
}

var grid = " " * width * height

for y in 0 -> height do
{
	for x in 0 -> width do
	{
		let region_type = memoized_erosion_level (x, y) mod 3
		
		grid[ x + y * width ] = byte region_type
	}
}

grid[ X + Y * width ] = byte (depth mod 20183 mod 3)

let risk_level = grid map u8 per Math.sum
put risk_level
