#!/usr/bin/env lvx

const bindir = dirname realpath argv[ 0 ]

const input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

const data = (load input_path).lines()

const vectors =
[
	[ 0,  1],  # N
	[-1,  0],  # W
	[ 0, -1],  # S
	[ 1,  0],  # E
]

def cardinal_translation (action)
{
	return u8 *(translated (str action, "NWSE", "\x00\x01\x02\x03"))
}

var x = 0
var y = 0

var dx = 10
var dy = 1

def rotate (degrees)
{
	for i in 0 -> degrees div 90 mod 4 do
	{
		dx, dy = -dy, dx
	}
}

for line in data do
{
	const action = line[ 0 ]
	const amount = int substr( line, 1 )
	
	if action in "LR" then
	{
		rotate (amount * ('O' <=> action))  # -1 for R, 1 for L
	}
	else if action in "NWSE" then
	{
		const step = vectors[ cardinal_translation action ]
		
		dx += step[ 0 ] * amount
		dy += step[ 1 ] * amount
	}
	else
	{
		x += dx * amount
		y += dy * amount
	}
}

print (abs x + abs y)
