#!/usr/bin/env lvx

let bindir = dirname realpath argv[ 0 ]

let input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

let data = (load input_path).lines()

let vectors =
[
	[ 0,  1],  # N
	[-1,  0],  # W
	[ 0, -1],  # S
	[ 1,  0],  # E
]

def cardinal_translation (action)
{
	return u8 *(translated (str action, "NWSE", "\x00\x01\x02\x03"))
}

var x = 0
var y = 0

var heading = 3  # east

def rotate (degrees)
{
	heading = (heading + degrees div 90) mod 4
}

for line in data do
{
	let action = line[ 0 ]
	let amount = int substr( line, 1 )
	
	if action in "LR" then
	{
		rotate (amount * ('O' <=> action))  # -1 for R, 1 for L
	}
	else
	{
		let dir =
			if action in "NWSE"
				then { cardinal_translation action }
				else { heading }
		
		let step = vectors[ dir ]
		
		x += step[ 0 ] * amount
		y += step[ 1 ] * amount
	}
}

put (abs x + abs y)
