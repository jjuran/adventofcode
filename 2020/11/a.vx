#!/usr/bin/env vx

const bindir = dirname realpath argv[ 0 ]
const libdir = bindir "/../../lib/"

const import = { const path = libdir _ ".vsl"; eval( load path, path ) }

const display = (import "status") { OUT <== _ }

const input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

const data = load input_path

const n = data.length

const lines = data.lines()

const width = lines[ 0 ].length
const stride = width + 1
const height = lines.length

const seats = 0 -> n ver { data[ v ] == 'L' }

def find_neighbors (i)
{
	display "" i
	
	const x = i mod stride
	const y = i div stride
	
	const xs = [x - 1, x, x + 1] ver {v in 0 -> width}
	const ys = [y - 1, y, y + 1] ver {v in 0 -> height}
	
	const nearby = ys map {v * stride} map { const y = v; *(xs map {v + y}) }
	
	return nearby ver {v != i and data[ v ] == 'L'}
}

const neighbor_map = seats map { v => find_neighbors v }

var grid = data

def step
{
	var work = grid
	
	for seat in neighbor_map do
	{
		const i = seat.key
		
		const popcount = seat.value pop {grid[ v ] == '#'}
		
		work[ i ] = ("#" grid[ i ] "LL")[ (popcount + 2) div 3 ]
	}
	
	grid <-> work
	
	return grid != work
}

var steps = 0

display "0"

while step() do
{
	display "" (grid pop {v == '#'})
}

print ""
