#!/usr/bin/env vx

const bindir = dirname realpath argv[ 0 ]
const libdir = bindir "/../../lib/"

const import = { const path = libdir _ ".vsl"; eval( load path, path ) }

const digraph = import "digraph"

const input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

const data = (load input_path).lines()

def parse (s)
{
	const words = [s / ' ']
	
	const style = words[ 0 ]
	const color = words[ 1 ]
	const count = words[ 4 ]
	
	if count == "no" then
	{
		return ()
	}
	
	const indices = 1 -> words.length div 4 map {v * 4}
	
	const subcolors = indices map { " ".join *(words[ v + 1 .. v + 2 ]) }
	
	return style " " color => subcolors
}

const color_map = str^(data map parse)

const inverse_map = digraph.transposed color_map

var gold_carriers = str^[]

var working_set = [ "shiny gold" ]

while working_set do
{
	var new_set = str^[]
	
	for c in working_set do
	{
		if not c in gold_carriers then
		{
			gold_carriers[ c ] = 1
		
			if c in inverse_map then
			{
				for s in inverse_map[ c ] do
				{
					new_set[ s ] = 1
				}
			}
		}
	}
	
	working_set = new_set.keys
}

print (gold_carriers.length - 1)
