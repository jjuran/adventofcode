#!/usr/bin/env lvx

let bindir = dirname realpath argv[ 0 ]
let libdir = bindir "/../../lib/"

let import = { let path = libdir _ ".vsl"; eval( load path, path ) }

let digraph = import "digraph"

let input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

let data = (load input_path).lines()

def parse (s)
{
	let words = [s / ' ']
	
	let style = words[ 0 ]
	let color = words[ 1 ]
	let count = words[ 4 ]
	
	if count == "no" then
	{
		return ()
	}
	
	let indices = 1 -> words.length div 4 map {v * 4}
	
	let subcolors = indices map { " ".join *(words[ v + 1 .. v + 2 ]) }
	
	return style " " color => subcolors
}

let transpose = digraph.transposed (data map parse)

let count = digraph.closure( transpose, "shiny gold" ).length - 1

put count
