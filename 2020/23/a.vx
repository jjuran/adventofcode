#!/usr/bin/env lvx

let bindir = dirname realpath argv[ 0 ]

let input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

let data = if argc > 1 then {argv[ 1 ]} else {"925176834"}

var cups = data

def move
{
	let trio = cups[ 1 .. 3 ]
	
	cups = cups[[ 0 ]] cups[ 4 -> cups.length ]
	
	var dst = u8 cups[ 0 ] - 1
	
	while not byte dst in cups do
	{
		if byte --dst == '0' then
		{
			dst = u8 '9'
		}
	}
	
	let i = (begin cups).find(byte dst).past.length + 1
	
	cups = cups[ 0 -> i ] trio cups[ i -> cups.length ]
	cups = cups[ 1 -> cups.length] cups[[ 0 ]]
}

for i in 1 .. 100 do
{
	move()
}

let j = (begin cups).find('1').past.length

cups = cups[ j -> cups.length ] cups[ 0 -> j ]
cups = cups[ 1 -> cups.length]

put cups
