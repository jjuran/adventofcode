#!/usr/bin/env lvx

let bindir = dirname realpath argv[ 0 ]

let input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

let data = (load input_path).lines()

let digit = ('0' .. '9') => int

let ops = byte^['*': Math.product, '+': Math.sum]

var p;

def calc
{
	def term
	{
		let x = ???
		
		if *p == '(' then
		{
			++p
			x = calc()
			p += ')'
		}
		else
		{
			x = p += digit
		}
		
		return x
	}
	
	var x = term()
	
	while p and *p != ')' do
	{
		p += ' '
		
		let op = *p++
		
		p += ' '
		
		let y = term()
		
		x = ops[ op ](x, y)
	}
	
	return x
}

def calculate (expr)
{
	p = begin expr
	
	return calc p
}

let sum = data map calculate per Math.sum
put sum
