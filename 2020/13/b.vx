#!/usr/bin/env vx

const bindir = dirname realpath argv[ 0 ]
const libdir = bindir "/../../lib/"

const import = { const path = libdir _ ".vsl"; eval( load path, path ) }

const modular = import "modular"

const input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

const data = (load input_path).lines()[ 1 ]

const buses = [translated (data, "x", "0") / ','] map int

const schedule = 0 -> buses.length map { buses[ v ] => v } ver .key

var T = 0
var M = 1  # super modulus

for departure in schedule do
{
	const m  = departure.key
	const dt = departure.value
	
	const delay = -(T + dt) mod m
	
	T += modular.alignment (delay, m, M)
	M *= m
}

print T
