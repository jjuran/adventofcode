#!/usr/bin/env vx

const bindir = dirname realpath argv[ 0 ]

const input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

const data = (load input_path).lines()

def parse_line (s)
{
	return [" " s[ 1 -> s.length - 1 ] / ','] map { int [substr(v, 1) / '='][1] }
}

var positions = data map parse_line

const n = positions.length

var velocities = [[0, 0, 0] (*) n]

def potential_energy (i)
{
	return positions[ i ] map abs per Math.sum
}

def kinetic_energy (i)
{
	return velocities[ i ] map abs per Math.sum
}

def total_energy (i) { potential_energy i * kinetic_energy i }

def apply_gravity
{
	for i in 1 -> n do
	{
		const a = positions[ i ]
		
		for j in 0 -> i do
		{
			const b = positions[ j ]
			
			for axis in 0 -> 3 do
			{
				const pull = b[ axis ] <=> a[ axis ]
				
				velocities[ i ][ axis ] += pull
				velocities[ j ][ axis ] -= pull
			}
		}
	}
}

def apply_velocity
{
	for i in 0 -> n do
	{
		const velocity = velocities[ i ]
		
		for axis in 0 -> 3 do
		{
			positions[ i ][ axis ] += velocity[ axis ]
		}
	}
}

for i in 0 -> 1000 do
{
	apply_gravity()
	apply_velocity()
}

print (0 -> n map total_energy per Math.sum)
