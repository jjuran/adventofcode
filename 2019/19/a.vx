#!/usr/bin/env lvx

let bindir = dirname realpath argv[ 0 ]
let libdir = bindir "/../../lib/"

let import = { let path = libdir _ ".vsl"; eval( load path, path ) }

let display = (import "status") { OUT <== _ }
let intcode = import "intcode"

let input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

let data = (load input_path).lines()[0]
let core = [data / ','] map int

var i = -1

let max_i = 50 * 50 - 1

var input_queue

def input
{
	return *input_queue++
}

var sum = 0

for j in 0 -> 50 * 50 do
{
	let machine = intcode.machine core
	
	input_queue = begin [ j mod 50, j div 50 ]
	
	let output = machine.run input
	
	sum += output
	
	display sum " " j
}

display ""

put sum
