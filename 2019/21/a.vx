#!/usr/bin/env lvx

const bindir = dirname realpath argv[ 0 ]
const libdir = bindir "/../../lib/"

const import = { const path = libdir _ ".vsl"; eval( load path, path ) }

const intcode = import "intcode"

const input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

const data = (load input_path).lines()[0]
const core = [data / ','] map int

var input_queue = begin DATA

def input
{
	const c = *input_queue++
	
	OUT <== c
	
	return int c
}

const machine = intcode.machine core

machine.connect-input input

for output in receiver machine.run do
{
	if output < 128 then
	{
		OUT <== byte output
	}
	else
	{
		print output
	}
}

# not (A and B and C) and D

end.
OR A J
AND B J
AND C J
NOT J J
AND D J
WALK
