#!/usr/bin/env lvx

let bindir = dirname realpath argv[ 0 ]

let input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

let data = (load input_path).lines()

var orbits = str^[]

for row in data do
{
	let (a, b) = row / ')'
	
	orbits[ b ] = a
}

def count_indirect_orbits (sat)
{
	if sat == "COM" then {return 0}
	
	return 1 + count_indirect_orbits orbits[ sat ]
}

var n = 0

var sat_you = orbits[ "YOU" ]
var sat_san = orbits[ "SAN" ]

var n_you = count_indirect_orbits sat_you
var n_san = count_indirect_orbits sat_san

while n_you > n_san do
{
	++n
	--n_you
	sat_you = orbits[ sat_you ]
}

while n_you < n_san do
{
	++n
	--n_san
	sat_san = orbits[ sat_san ]
}

while sat_you != sat_san do
{
	n += 2
	
	sat_you = orbits[ sat_you ]
	sat_san = orbits[ sat_san ]
}

put n
