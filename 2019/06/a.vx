#!/usr/bin/env lvx

let bindir = dirname realpath argv[ 0 ]

let input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

let data = (load input_path).lines()

var orbits = str^[]

for row in data do
{
	let (a, b) = row / ')'
	
	orbits[ b ] = a
}

var indirect_orbits = str^[]

def count_indirect_orbits (sat)
{
	if sat == "COM" then {return 0}
	
	if sat in indirect_orbits then
	{
		return indirect_orbits[ sat ]
	}
	
	let n = 1 + count_indirect_orbits orbits[ sat ]
	
	return indirect_orbits[ sat ] = n
}

put (orbits.keys map count_indirect_orbits per Math.sum)
