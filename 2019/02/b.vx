#!/usr/bin/env lvx

let bindir = dirname realpath argv[ 0 ]

let input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

let data = (load input_path).lines()

let program = [packed data / ','] map {int v.string}

let opcodes = [ null, Math.sum, Math.product ]

var memory

def reset
{
	memory = program
}

def input (a, b)
{
	memory[ 1 ] = a
	memory[ 2 ] = b
}

def run
{
	var PC = 0
	
	while true do
	{
		let op = memory[ PC++ ]
		
		if op == 99 then
		{
			break
		}
		
		let i = memory[ PC++ ]
		let j = memory[ PC++ ]
		let k = memory[ PC++ ]
		
		let a = memory[ i ]
		let b = memory[ j ]
		
		let c = opcodes[ op ]( a, b )
		
		memory[ k ] = c
	}
}

def output { memory[ 0 ] }

for i in 0 .. 99 do
{
	for j in 0 .. 99 do
	{
		reset()
		input( i, j )
		run()
		
		if output() == 19690720 then
		{
			put (100 * i + j)
		}
	}
}
