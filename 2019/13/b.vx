#!/usr/bin/env vx

const bindir = dirname realpath argv[ 0 ]
const libdir = bindir "/../../lib/"

const import = { const path = libdir _ ".vsl"; eval( load path, path ) }

const display = (import "status") { OUT <== _ }
const intcode = import "intcode"

const input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

const data = (load input_path).lines()[0]
const core = [data / ','] map int

const machine = intcode.machine core

const Tile_empty  = 0
const Tile_wall   = 1
const Tile_block  = 2
const Tile_paddle = 3
const Tile_ball   = 4

def thrice (f)
{
	if (const a = f()) isa () then {return ()}
	
	const b = f()
	const c = f()
	
	return a, b, c
}

var ball_x
var paddle_x

def joystick
{
	return ball_x <=> paddle_x
}

machine.poke( 0, 2 )

machine.connect-input joystick

var n_blocks = 0

var score = 0

while var tuple = thrice machine.run do
{
	const (x, y, t) = tuple
	
	if x < 0 then
	{
		score = t
		
		display "Score: " score
	}
	else
	{
		if t == Tile_ball then
		{
			ball_x = x
		}
		else if t == Tile_paddle then
		{
			paddle_x = x
		}
		else if t == Tile_block then
		{
			++n_blocks
			
			display "" n_blocks
		}
	}
}

display ""

print score
