#!/usr/bin/env lvx

let bindir = dirname realpath argv[ 0 ]
let libdir = bindir "/../../lib/"

def import (lib) { eval (load, realpath) libdir lib ".vy" }

let intcode = import "intcode"

let input_path = if argc > 1 then {argv[ 1 ]} else {bindir "/input.txt"}

let data = (load input_path).lines()[0]
let core = [data / ','] map int

let machine = intcode.machine core

let Tile_empty  = 0
let Tile_wall   = 1
let Tile_block  = 2
let Tile_paddle = 3
let Tile_ball   = 4

def third (f)
{
	f()
	f()
	
	return f()
}

var n_blocks = 0

while (var tile = third machine.run) < Tile_paddle do
{
	if tile == Tile_block then
	{
		++n_blocks
	}
}

put n_blocks
