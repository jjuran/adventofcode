#!/usr/bin/env vx

const bindir = dirname realpath argv[ 0 ]
const libdir = bindir "/../lib/"

const data = (load bindir "/14.txt").lines()
#const data = DATA.lines()

def parse (measure)
{
	const n, const name = measure / ' '
	
	return name => int n
}

var recipes = str^[]
var needs  = str^[]

for row in data do
{
	var p = (begin row).find " => "
	
	const reagents = p.past
	const product = parse (p + 4).rest
	
	const factors = [" " reagents / ','] map { parse substr(v, 1) }
	
	recipes[ product.key ] = [ product.value, factors ]
	
	needs[ product.key ] = 0
}

needs[ "ORE" ] = 0
needs[ "FUEL" ] = 1

while needs ver {v.value > 0 and v.key != "ORE"} do
{
	for need in (needs ver {v.value > 0}) do
	{
		const name = need.key
		
		if name == "ORE" then
		{
			continue
		}
		
		const needed = needs[ name ]
		
		const r = recipes[ name ]
		
		const n = r[ 0 ]
		
		const coefficient = (needed + n - 1) div n
		
		const factors = r[ 1 ]
		
		for f in factors do
		{
			needs[ f.key ] += f.value * coefficient
		}
		
		needs[ name ] -= n * coefficient
	}
}

print needs[ "ORE" ]

end.
10 ORE => 10 A
1 ORE => 1 B
7 A, 1 B => 1 C
7 A, 1 C => 1 D
7 A, 1 D => 1 E
7 A, 1 E => 1 FUEL
